//
// Generated file, do not edit! Created by nedtool 5.7 from DolevStrong.msg.
//

#ifndef __DOLEVSTRONG_M_H
#define __DOLEVSTRONG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class DolevStrongMsg;
/**
 * Class generated from <tt>DolevStrong.msg:12</tt> by nedtool.
 * <pre>
 * message DolevStrongMsg
 * {
 *     int source;
 *     int signCount = 0;
 *     int signature[];
 *     int round = 0;
 *     int value = 0;
 *     int messageType;
 * }
 * </pre>
 */
class DolevStrongMsg : public ::omnetpp::cMessage
{
  protected:
    int source = 0;
    int signCount = 0;
    int *signature = nullptr;
    size_t signature_arraysize = 0;
    int round = 0;
    int value = 0;
    int messageType = 0;

  private:
    void copy(const DolevStrongMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DolevStrongMsg&);

  public:
    DolevStrongMsg(const char *name=nullptr, short kind=0);
    DolevStrongMsg(const DolevStrongMsg& other);
    virtual ~DolevStrongMsg();
    DolevStrongMsg& operator=(const DolevStrongMsg& other);
    virtual DolevStrongMsg *dup() const override {return new DolevStrongMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSource() const;
    virtual void setSource(int source);
    virtual int getSignCount() const;
    virtual void setSignCount(int signCount);
    virtual void setSignatureArraySize(size_t size);
    virtual size_t getSignatureArraySize() const;
    virtual int getSignature(size_t k) const;
    virtual void setSignature(size_t k, int signature);
    virtual void insertSignature(int signature);
    virtual void insertSignature(size_t k, int signature);
    virtual void eraseSignature(size_t k);
    virtual int getRound() const;
    virtual void setRound(int round);
    virtual int getValue() const;
    virtual void setValue(int value);
    virtual int getMessageType() const;
    virtual void setMessageType(int messageType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DolevStrongMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DolevStrongMsg& obj) {obj.parsimUnpack(b);}

#endif // ifndef __DOLEVSTRONG_M_H

